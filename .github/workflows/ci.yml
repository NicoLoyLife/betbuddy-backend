name: CI

on:
  push:
    branches: [ main, 'feature/*', 'fix/*' ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: betbuddy
          POSTGRES_USER: betbuddy
          POSTGRES_PASSWORD: betbuddy
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U betbuddy" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      DJANGO_SECRET_KEY: testkey
      DJANGO_DEBUG: 'False'
      POSTGRES_DB: betbuddy
      POSTGRES_USER: betbuddy
      POSTGRES_PASSWORD: betbuddy
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Lint with black
        run: |
          black --check . > black.log 2>&1 || echo "BLACK_FAILED=1" >> $GITHUB_ENV
      - name: Lint with flake8
        run: |
          flake8 . > flake8.log 2>&1 || echo "FLAKE8_FAILED=1" >> $GITHUB_ENV
      - name: Run Django tests
        run: |
          python manage.py migrate
          python manage.py test > test.log 2>&1 || echo "TEST_FAILED=1" >> $GITHUB_ENV
      - name: Integrationstests (URLs erreichbar)
        run: |
          pip install requests
          pytest tests/test_integration_urls.py > integrationtest.log 2>&1 || echo "INTEGRATION_TEST_FAILED=1" >> $GITHUB_ENV
      - name: Discord Benachrichtigung
        if: always()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          MSG="üì¢ [${{ github.repository }}] ${{ github.event_name }} auf \`${{ github.ref }}\` von ${{ github.actor }} (${{ github.sha }})"
          DETAILS=""
          if [ "$BLACK_FAILED" = "1" ]; then
            DETAILS="$DETAILS\n‚ùå Black-Fehler:\n\`\`\`\n$(tail -n 20 black.log)\n\`\`\`"
          fi
          if [ "$FLAKE8_FAILED" = "1" ]; then
            DETAILS="$DETAILS\n‚ùå Flake8-Fehler:\n\`\`\`\n$(tail -n 20 flake8.log)\n\`\`\`"
          fi
          if [ "$TEST_FAILED" = "1" ]; then
            DETAILS="$DETAILS\n‚ùå Django-Test-Fehler:\n\`\`\`\n$(tail -n 20 test.log)\n\`\`\`"
          fi
          if [ "$INTEGRATION_TEST_FAILED" = "1" ]; then
            DETAILS="$DETAILS\n‚ùå Integrationstest fehlgeschlagen:\n\`\`\`\n$(tail -n 20 integrationtest.log)\n\`\`\`"
          fi
          if [ -z "$DETAILS" ]; then
            DETAILS="\n‚úÖ Alle Checks erfolgreich!"
          fi
          MSG="$MSG$DETAILS"
          curl -H "Content-Type: application/json" -X POST -d "{\"content\":\"$MSG\"}" $DISCORD_WEBHOOK 